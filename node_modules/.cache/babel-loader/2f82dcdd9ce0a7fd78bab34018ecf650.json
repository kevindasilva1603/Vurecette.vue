{"remainingRequest":"/Users/florianmartinez/Desktop/vue-quiz/node_modules/babel-loader/lib/index.js!/Users/florianmartinez/Desktop/vue-quiz/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/florianmartinez/Desktop/vue-quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/florianmartinez/Desktop/vue-quiz/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/florianmartinez/Desktop/vue-quiz/src/components/QuestionBox.vue","mtime":1710928949645},{"path":"/Users/florianmartinez/Desktop/vue-quiz/node_modules/cache-loader/dist/cjs.js","mtime":1710929127782},{"path":"/Users/florianmartinez/Desktop/vue-quiz/node_modules/babel-loader/lib/index.js","mtime":1710929127892},{"path":"/Users/florianmartinez/Desktop/vue-quiz/node_modules/cache-loader/dist/cjs.js","mtime":1710929127782},{"path":"/Users/florianmartinez/Desktop/vue-quiz/node_modules/vue-loader/lib/index.js","mtime":1710929128049}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/florianmartinez/Desktop/vue-quiz/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport _ from \"lodash\";\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data: function data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      answered: false\n    };\n  },\n  watch: {\n    currentQuestion: function currentQuestion() {\n      this.selectedIndex = null;\n      this.answered = false;\n    }\n  },\n  methods: {\n    selectAnswer: function selectAnswer(index) {\n      this.selectedIndex = index;\n    },\n    answerClass: function answerClass(index) {\n      var answerClass = \"\";\n      if (!this.answered && this.selectedIndex === index) {\n        answerClass = \"selected\";\n      } else if (this.answered && this.correctIndex === index) {\n        answerClass = \"correct\";\n      } else if (this.answered && this.selectedIndex === index && this.correctIndex !== index) {\n        answerClass = \"incorrect\";\n      }\n      return answerClass;\n    },\n    submitAnswer: function submitAnswer() {\n      this.correctIndex = this.answers.indexOf(this.currentQuestion.correct_answer);\n      var isCorrect = false;\n      this.answered = true;\n      if (this.selectedIndex === this.correctIndex) {\n        isCorrect = true;\n      }\n      this.increment(isCorrect);\n    }\n  },\n  computed: {\n    answers: function answers() {\n      var answers = _toConsumableArray(this.currentQuestion.incorrect_answers);\n      answers.push(this.currentQuestion.correct_answer);\n      answers = _.shuffle(answers);\n      return answers;\n    }\n  }\n};",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,CAAA,MAAA,QAAA;AACA,eAAA;EACA,KAAA,EAAA;IACA,eAAA,EAAA,MAAA;IACA,IAAA,EAAA,QAAA;IACA,SAAA,EAAA;EACA,CAAA;EACA,IAAA,WAAA,KAAA,EAAA;IACA,OAAA;MACA,aAAA,EAAA,IAAA;MACA,YAAA,EAAA,IAAA;MACA,QAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,KAAA,EAAA;IACA,eAAA,WAAA,gBAAA,EAAA;MACA,IAAA,CAAA,aAAA,GAAA,IAAA;MACA,IAAA,CAAA,QAAA,GAAA,KAAA;IACA;EACA,CAAA;EACA,OAAA,EAAA;IACA,YAAA,WAAA,aAAA,KAAA,EAAA;MACA,IAAA,CAAA,aAAA,GAAA,KAAA;IACA,CAAA;IACA,WAAA,WAAA,YAAA,KAAA,EAAA;MACA,IAAA,WAAA,GAAA,EAAA;MACA,IAAA,CAAA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,aAAA,KAAA,KAAA,EAAA;QACA,WAAA,GAAA,UAAA;MACA,CAAA,MAAA,IAAA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,YAAA,KAAA,KAAA,EAAA;QACA,WAAA,GAAA,SAAA;MACA,CAAA,MAAA,IACA,IAAA,CAAA,QAAA,IACA,IAAA,CAAA,aAAA,KAAA,KAAA,IACA,IAAA,CAAA,YAAA,KAAA,KAAA,EACA;QACA,WAAA,GAAA,WAAA;MACA;MACA,OAAA,WAAA;IACA,CAAA;IACA,YAAA,WAAA,aAAA,EAAA;MACA,IAAA,CAAA,YAAA,GAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CACA,IAAA,CAAA,eAAA,CAAA,cACA,CAAA;MACA,IAAA,SAAA,GAAA,KAAA;MACA,IAAA,CAAA,QAAA,GAAA,IAAA;MACA,IAAA,IAAA,CAAA,aAAA,KAAA,IAAA,CAAA,YAAA,EAAA;QACA,SAAA,GAAA,IAAA;MACA;MACA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA;IACA;EACA,CAAA;EACA,QAAA,EAAA;IACA,OAAA,WAAA,QAAA,EAAA;MACA,IAAA,OAAA,GAAA,kBAAA,CAAA,IAAA,CAAA,eAAA,CAAA,iBAAA,CAAA;MACA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,eAAA,CAAA,cAAA,CAAA;MACA,OAAA,GAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA;MACA,OAAA,OAAA;IACA;EACA;AACA,CAAA","sourcesContent":["<template>\n    <div class=\"question-box-container\">\n        <b-jumbotron>\n            <template v-slot:lead>\n                {{ currentQuestion.question }}\n            </template>\n\n            <hr class=\"my-4\" />\n\n            <b-list-group>\n                <b-list-group-item\n                    v-for=\"(answer, index) in answers\"\n                    :key=\"index\"\n                    @click.prevent=\"selectAnswer(index)\"\n                    :class=\"[answerClass(index)]\"\n                    >{{ answer }}</b-list-group-item\n                >\n            </b-list-group>\n            <b-button\n                variant=\"primary\"\n                @click=\"submitAnswer\"\n                :disabled=\"selectedIndex === null || answered === true\"\n                class=\"mr-2\"\n                href=\"#\"\n                >Soumettre</b-button\n            >\n            <b-button variant=\"success\" @click=\"next\" href=\"#\"\n                >Suivant</b-button\n            >\n        </b-jumbotron>\n    </div>\n</template>\n<script>\nimport _ from \"lodash\";\nexport default {\n    props: {\n        currentQuestion: Object,\n        next: Function,\n        increment: Function,\n    },\n    data() {\n        return {\n            selectedIndex: null,\n            correctIndex: null,\n            answered: false,\n        };\n    },\n    watch: {\n        currentQuestion() {\n            this.selectedIndex = null;\n            this.answered = false;\n        },\n    },\n    methods: {\n        selectAnswer(index) {\n            this.selectedIndex = index;\n        },\n        answerClass(index) {\n            let answerClass = \"\";\n            if (!this.answered && this.selectedIndex === index) {\n                answerClass = \"selected\";\n            } else if (this.answered && this.correctIndex === index) {\n                answerClass = \"correct\";\n            } else if (\n                this.answered &&\n                this.selectedIndex === index &&\n                this.correctIndex !== index\n            ) {\n                answerClass = \"incorrect\";\n            }\n            return answerClass;\n        },\n        submitAnswer() {\n            this.correctIndex = this.answers.indexOf(\n                this.currentQuestion.correct_answer\n            );\n            let isCorrect = false;\n            this.answered = true;\n            if (this.selectedIndex === this.correctIndex) {\n                isCorrect = true;\n            }\n            this.increment(isCorrect);\n        },\n    },\n    computed: {\n        answers() {\n            let answers = [...this.currentQuestion.incorrect_answers];\n            answers.push(this.currentQuestion.correct_answer);\n            answers = _.shuffle(answers);\n            return answers;\n        },\n    },\n};\n</script>\n\n<style scoped>\n.list-group {\n    margin-bottom: 5px;\n}\n.list-group-item:hover {\n    background-color: #eee;\n    cursor: pointer;\n}\n.selected {\n    background-color: lightblue;\n}\n.correct {\n    background-color: lightgreen;\n}\n.incorrect {\n    background-color: red;\n}\n</style>\n"],"sourceRoot":"src/components"}]}